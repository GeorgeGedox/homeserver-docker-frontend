version: "3.5"

networks:
  traefik:
    name: traefik_bridge

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: always
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    labels: 
    - traefik.enable=true
    - traefik.http.routers.api.rule=Host(`traefik.${LAN_HOST}`)
    - traefik.http.routers.api.service=api@internal
    - traefik.http.routers.api.entrypoints=http

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=http
      - traefik.http.routers.portainer.rule=Host(`portainer.${LAN_HOST}`)
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    depends_on: 
      - traefik

  organizr:
    image: organizrtools/organizr-v2:latest
    container_name: organizr
    restart: unless-stopped
    networks: 
      - traefik
    volumes:
      - ./organizr:/config
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
    labels: 
      - traefik.enable=true
      - traefik.http.routers.organizr.rule=Host(`${WAN_HOST}`, `${LAN_HOST}`)
      - traefik.http.middlewares.organizr-admin.forwardauth.address=http://organizr/api/?v1/auth&group=1
    depends_on: 
      - traefik